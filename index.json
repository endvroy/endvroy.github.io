[{"authors":null,"categories":null,"content":"details will be revealed after the review process\n","date":1544428800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1544428800,"objectID":"a0104d5c206d86ab0d26838957a1a856","permalink":"/project/code_gen/","publishdate":"2018-12-10T00:00:00-08:00","relpermalink":"/project/code_gen/","section":"project","summary":"General-purpose code generation with a grammar-agnostic model","tags":["program synthesis","machine learning","natural language processing"],"title":"Code Generation from NL","type":"project"},{"authors":null,"categories":null,"content":"details will be revealed after the review process\n","date":1544428800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1544428800,"objectID":"ca06bf2147bedcef06c4d535c1993892","permalink":"/project/hybrid_npi/","publishdate":"2018-12-10T00:00:00-08:00","relpermalink":"/project/hybrid_npi/","section":"project","summary":"Training Neural Programmer-Interpreters with a backpropagation-reinforcement hybrid training method","tags":["program induction","machine learning","reinforcement learning"],"title":"Hybrid Training Neural Programmer-Interpreters","type":"project"},{"authors":null,"categories":null,"content":"In this project, I investigated how well stochastic superoptimization can be migrated to a different architecture. Stochastic superiotimization uses Markov Chain Monte Carlo (MCMC) to sample to program space, using a cost function to guide the sampling process. Human Resource Machine is a game about assembly programming. The architecture operates with one-address code, only one register, one input/output stream and limited memory. The project is efficiently implemented in Rust.\n","date":1530428400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1530428400,"objectID":"9bf2da6304e9398be49d6e492cb88b45","permalink":"/project/stoke/","publishdate":"2018-07-01T00:00:00-07:00","relpermalink":"/project/stoke/","section":"project","summary":"[Stochastic superoptimization](http://stoke.stanford.edu/) for the [Human Resource Machine](https://tomorrowcorporation.com/humanresourcemachine) architecture.","tags":["program synthesis","superoptimization"],"title":"STOKE for HRM","type":"project"},{"authors":null,"categories":null,"content":"","date":1508050800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1508050800,"objectID":"ecafb4be754f84a0dffb0815d3a1ded3","permalink":"/project/buffer-overflow-detector/","publishdate":"2017-10-15T00:00:00-07:00","relpermalink":"/project/buffer-overflow-detector/","section":"project","summary":"Detecting potential buffer overflow with dataflow analysis","tags":["program analysis","dataflow analysis"],"title":"Buffer Overflow Detector","type":"project"},{"authors":null,"categories":null,"content":"","date":1506841200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1506841200,"objectID":"ba458aaf849ae032b9b5b89d706e7a6c","permalink":"/project/efficient_path_profiler/","publishdate":"2017-10-01T00:00:00-07:00","relpermalink":"/project/efficient_path_profiler/","section":"project","summary":"Collecting dynamic call graphs with LLVM","tags":["program analysis"],"title":"Efficient Path Profiler","type":"project"},{"authors":null,"categories":null,"content":"","date":1505545200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1505545200,"objectID":"28878137db7aecfd226e971fc307ecc7","permalink":"/project/call_graph_profiler/","publishdate":"2017-09-16T00:00:00-07:00","relpermalink":"/project/call_graph_profiler/","section":"project","summary":"Collecting path frequency information for acyclic functions with LLVM","tags":["program analysis"],"title":"Call Graph Profiler","type":"project"},{"authors":null,"categories":null,"content":"","date":1504076400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1504076400,"objectID":"7fb109ec3f2cb053bf133a720f3d8ef6","permalink":"/project/linguist/","publishdate":"2017-08-30T00:00:00-07:00","relpermalink":"/project/linguist/","section":"project","summary":"LALR(1) compiler-compiler that is built upon itself","tags":["compiler"],"title":"Linguist","type":"project"}]